{"ast":null,"code":"var _jsxFileName = \"/Users/a/Desktop/React Projects/routers/routers-project/frontend/src/pages/EventDetail.js\",\n  _s = $RefreshSig$();\nimport { Await, defer, json, redirect, useRouteLoaderData } from 'react-router-dom';\nimport EventItem from '../components/EventItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventDetailPage() {\n  _s();\n  const {\n    event,\n    events\n  } = useRouteLoaderData(\"event-detail\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Await, {\n      resolve: event,\n      children: loadedEvent => /*#__PURE__*/_jsxDEV(EventItem, {\n        event: loadedEvent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 28\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Await, {\n      resolve: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(EventItem, {\n      event: data.event\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(EventDetailPage, \"OA7jEBfO3UI1aCR8ByPCigEHUtE=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nasync function loadEvent(id) {\n  const response = await fetch('http://localhost:8080/events/' + id);\n  if (!response.ok) {\n    throw json({\n      message: 'Could not fetch details for selected event.'\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nasync function loadEvents() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    // return { isError: true, message: 'Could not fetch events.' };\n    // throw new Response(JSON.stringify({ message: 'Could not fetch events.' }), {\n    //   status: 500,\n    // });\n    throw json({\n      message: 'Could not fetch events.'\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nexport async function loader({\n  request,\n  params\n}) {\n  const id = params.eventId;\n  return defer({\n    event: loadEvent(id),\n    events: loadEvents()\n  });\n}\nexport async function action({\n  params,\n  request\n}) {\n  const eventId = params.eventId;\n  const response = await fetch('http://localhost:8080/events/' + eventId, {\n    method: request.method\n  });\n  if (!response.ok) {\n    throw json({\n      message: 'Could not delete the event.'\n    }, {\n      status: 500\n    });\n  }\n  return redirect('/events');\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["Await","defer","json","redirect","useRouteLoaderData","EventItem","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailPage","_s","event","events","children","resolve","loadedEvent","fileName","_jsxFileName","lineNumber","columnNumber","data","_c","loadEvent","id","response","fetch","ok","message","status","resData","loadEvents","loader","request","params","eventId","action","method","$RefreshReg$"],"sources":["/Users/a/Desktop/React Projects/routers/routers-project/frontend/src/pages/EventDetail.js"],"sourcesContent":["import {Await, defer, json, redirect, useRouteLoaderData} from 'react-router-dom';\n\nimport EventItem from '../components/EventItem';\n\nfunction EventDetailPage() {\n    const {event, events} = useRouteLoaderData(\"event-detail\");\n\n    return (\n        <>\n        <Await resolve={event}>\n            {loadedEvent=> <EventItem event={loadedEvent}/>}\n        </Await>\n        <Await resolve={events}>\n\n        </Await>\n        <EventItem event={data.event} />\n        </>\n    );\n}\n\nexport default EventDetailPage;\n\nasync function loadEvent(id) {\n    const response = await fetch('http://localhost:8080/events/' + id);\n\n    if (!response.ok) {\n        throw json({message: 'Could not fetch details for selected event.'}, {\n            status: 500\n        })\n    } else {\n        const resData = await response.json();\n        return resData.events;\n    }\n}\n\nasync function loadEvents() {\n    const response = await fetch('http://localhost:8080/events');\n\n    if (!response.ok) {\n        // return { isError: true, message: 'Could not fetch events.' };\n        // throw new Response(JSON.stringify({ message: 'Could not fetch events.' }), {\n        //   status: 500,\n        // });\n        throw json(\n            { message: 'Could not fetch events.' },\n            {\n                status: 500,\n            }\n        );\n    } else {\n        const resData = await response.json();\n        return resData.events;\n    }\n}\n\n\nexport async function loader({request, params}) {\n    const id = params.eventId;\n    return defer({\n        event: loadEvent(id),\n        events: loadEvents()\n    });\n}\n\nexport async function action({params, request}) {\n    const eventId = params.eventId;\n    const response  = await fetch('http://localhost:8080/events/' + eventId, {\n        method: request.method,\n    });\n    if(!response.ok){\n        throw json(\n            {message: 'Could not delete the event.'},\n            {\n                status: 500\n            }\n        )\n    }\n    return redirect('/events');\n}"],"mappings":";;AAAA,SAAQA,KAAK,EAAEC,KAAK,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,kBAAkB,QAAO,kBAAkB;AAEjF,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhD,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM;IAACC,KAAK;IAAEC;EAAM,CAAC,GAAGT,kBAAkB,CAAC,cAAc,CAAC;EAE1D,oBACIG,OAAA,CAAAE,SAAA;IAAAK,QAAA,gBACAP,OAAA,CAACP,KAAK;MAACe,OAAO,EAAEH,KAAM;MAAAE,QAAA,EACjBE,WAAW,iBAAGT,OAAA,CAACF,SAAS;QAACO,KAAK,EAAEI;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eACRb,OAAA,CAACP,KAAK;MAACe,OAAO,EAAEF;IAAO;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEhB,CAAC,eACRb,OAAA,CAACF,SAAS;MAACO,KAAK,EAAES,IAAI,CAACT;IAAM;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eAC9B,CAAC;AAEX;AAACT,EAAA,CAdQD,eAAe;EAAA,QACIN,kBAAkB;AAAA;AAAAkB,EAAA,GADrCZ,eAAe;AAgBxB,eAAeA,eAAe;AAE9B,eAAea,SAASA,CAACC,EAAE,EAAE;EACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGF,EAAE,CAAC;EAElE,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;IACd,MAAMzB,IAAI,CAAC;MAAC0B,OAAO,EAAE;IAA6C,CAAC,EAAE;MACjEC,MAAM,EAAE;IACZ,CAAC,CAAC;EACN,CAAC,MAAM;IACH,MAAMC,OAAO,GAAG,MAAML,QAAQ,CAACvB,IAAI,CAAC,CAAC;IACrC,OAAO4B,OAAO,CAACjB,MAAM;EACzB;AACJ;AAEA,eAAekB,UAAUA,CAAA,EAAG;EACxB,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IACd;IACA;IACA;IACA;IACA,MAAMzB,IAAI,CACN;MAAE0B,OAAO,EAAE;IAA0B,CAAC,EACtC;MACIC,MAAM,EAAE;IACZ,CACJ,CAAC;EACL,CAAC,MAAM;IACH,MAAMC,OAAO,GAAG,MAAML,QAAQ,CAACvB,IAAI,CAAC,CAAC;IACrC,OAAO4B,OAAO,CAACjB,MAAM;EACzB;AACJ;AAGA,OAAO,eAAemB,MAAMA,CAAC;EAACC,OAAO;EAAEC;AAAM,CAAC,EAAE;EAC5C,MAAMV,EAAE,GAAGU,MAAM,CAACC,OAAO;EACzB,OAAOlC,KAAK,CAAC;IACTW,KAAK,EAAEW,SAAS,CAACC,EAAE,CAAC;IACpBX,MAAM,EAAEkB,UAAU,CAAC;EACvB,CAAC,CAAC;AACN;AAEA,OAAO,eAAeK,MAAMA,CAAC;EAACF,MAAM;EAAED;AAAO,CAAC,EAAE;EAC5C,MAAME,OAAO,GAAGD,MAAM,CAACC,OAAO;EAC9B,MAAMV,QAAQ,GAAI,MAAMC,KAAK,CAAC,+BAA+B,GAAGS,OAAO,EAAE;IACrEE,MAAM,EAAEJ,OAAO,CAACI;EACpB,CAAC,CAAC;EACF,IAAG,CAACZ,QAAQ,CAACE,EAAE,EAAC;IACZ,MAAMzB,IAAI,CACN;MAAC0B,OAAO,EAAE;IAA6B,CAAC,EACxC;MACIC,MAAM,EAAE;IACZ,CACJ,CAAC;EACL;EACA,OAAO1B,QAAQ,CAAC,SAAS,CAAC;AAC9B;AAAC,IAAAmB,EAAA;AAAAgB,YAAA,CAAAhB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
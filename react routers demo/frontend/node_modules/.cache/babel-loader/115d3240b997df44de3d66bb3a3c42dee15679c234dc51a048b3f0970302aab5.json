{"ast":null,"code":"var _jsxFileName = \"/Users/a/Desktop/React Projects/routers/routers-project/frontend/src/pages/EventDetail.js\",\n  _s = $RefreshSig$();\nimport { useParams, Link, json, useLoaderData } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EventDetail = () => {\n  _s();\n  const data = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventItem, {\n      event: data.event\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(EventDetail, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventDetail;\nexport default EventDetail;\nexport async function loader({\n  request,\n  params\n}) {\n  const id = params.eventId;\n  const response = await fetch('http://localhost:8080/events/');\n  if (!response.ok) {\n    throw json({\n      message: 'Could not fetch details for selected event.'\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetail\");","map":{"version":3,"names":["useParams","Link","json","useLoaderData","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetail","_s","data","children","EventItem","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","request","params","id","eventId","response","fetch","ok","message","status","$RefreshReg$"],"sources":["/Users/a/Desktop/React Projects/routers/routers-project/frontend/src/pages/EventDetail.js"],"sourcesContent":["import {useParams, Link, json, useLoaderData} from \"react-router-dom\";\n\nconst EventDetail = () => {\n    const data = useLoaderData();\n\n    return <>\n        <EventItem event={data.event}/>\n    </>\n}\n\nexport default EventDetail;\n\nexport async function loader({request, params}) {\n    const id = params.eventId;\n\n    const response = await fetch('http://localhost:8080/events/');\n\n    if(!response.ok) {\n        throw json({message: 'Could not fetch details for selected event.'},{\n            status: 500\n        })\n    }else{\n        return response;\n    }\n}"],"mappings":";;AAAA,SAAQA,SAAS,EAAEC,IAAI,EAAEC,IAAI,EAAEC,aAAa,QAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEtE,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,IAAI,GAAGP,aAAa,CAAC,CAAC;EAE5B,oBAAOE,OAAA,CAAAE,SAAA;IAAAI,QAAA,eACHN,OAAA,CAACO,SAAS;MAACC,KAAK,EAAEH,IAAI,CAACG;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC,gBACjC,CAAC;AACP,CAAC;AAAAR,EAAA,CANKD,WAAW;EAAA,QACAL,aAAa;AAAA;AAAAe,EAAA,GADxBV,WAAW;AAQjB,eAAeA,WAAW;AAE1B,OAAO,eAAeW,MAAMA,CAAC;EAACC,OAAO;EAAEC;AAAM,CAAC,EAAE;EAC5C,MAAMC,EAAE,GAAGD,MAAM,CAACE,OAAO;EAEzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,CAAC;EAE7D,IAAG,CAACD,QAAQ,CAACE,EAAE,EAAE;IACb,MAAMxB,IAAI,CAAC;MAACyB,OAAO,EAAE;IAA6C,CAAC,EAAC;MAChEC,MAAM,EAAE;IACZ,CAAC,CAAC;EACN,CAAC,MAAI;IACD,OAAOJ,QAAQ;EACnB;AACJ;AAAC,IAAAN,EAAA;AAAAW,YAAA,CAAAX,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
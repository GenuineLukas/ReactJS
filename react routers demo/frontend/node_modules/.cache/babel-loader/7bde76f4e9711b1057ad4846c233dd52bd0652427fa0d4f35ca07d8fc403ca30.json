{"ast":null,"code":"var _jsxFileName = \"/Users/a/Desktop/React Projects/routers/routers-project/frontend/src/pages/NewEvent.js\";\nimport EventForm from '../components/EventForm';\nimport { json } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewEvent = () => {\n  return /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 12\n  }, this);\n};\n_c = NewEvent;\nexport default NewEvent;\nexport async function action({\n  request,\n  params\n}) {\n  const data = await request.formData();\n  const eventData = {\n    title: data.get('title'),\n    //argument here: name property of the input tags\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get('description')\n  };\n  const response = await fetch('http://localhost:8080/events', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (!response.ok) {\n    throw json({\n      message: 'Could not save event.'\n    }, {\n      status: 500\n    });\n  }\n}\n\n//NewEvent, EventForm, App\nvar _c;\n$RefreshReg$(_c, \"NewEvent\");","map":{"version":3,"names":["EventForm","json","jsxDEV","_jsxDEV","NewEvent","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","params","data","formData","eventData","title","get","image","date","description","response","fetch","method","headers","body","JSON","stringify","ok","message","status","$RefreshReg$"],"sources":["/Users/a/Desktop/React Projects/routers/routers-project/frontend/src/pages/NewEvent.js"],"sourcesContent":["import EventForm from '../components/EventForm';\nimport {json} from \"react-router-dom\";\nconst NewEvent = () => {\n    return <EventForm/>;\n}\n\nexport default NewEvent;\n\nexport async function action({request, params}) {\n    const data = await request.formData();\n\n    const eventData = {title: data.get('title'),//argument here: name property of the input tags\n                            image: data.get('image'),\n                            date: data.get('date'),\n                            description: data.get('description'),\n                        };\n\n    const response = await fetch('http://localhost:8080/events', {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify(eventData)\n    });\n\n    if(!response.ok){\n        throw json({message: 'Could not save event.'}, {status: 500});\n    }\n}\n\n//NewEvent, EventForm, App"],"mappings":";AAAA,OAAOA,SAAS,MAAM,yBAAyB;AAC/C,SAAQC,IAAI,QAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACtC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACnB,oBAAOD,OAAA,CAACH,SAAS;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AACvB,CAAC;AAAAC,EAAA,GAFKL,QAAQ;AAId,eAAeA,QAAQ;AAEvB,OAAO,eAAeM,MAAMA,CAAC;EAACC,OAAO;EAAEC;AAAM,CAAC,EAAE;EAC5C,MAAMC,IAAI,GAAG,MAAMF,OAAO,CAACG,QAAQ,CAAC,CAAC;EAErC,MAAMC,SAAS,GAAG;IAACC,KAAK,EAAEH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IAAC;IACpBC,KAAK,EAAEL,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBE,IAAI,EAAEN,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IACtBG,WAAW,EAAEP,IAAI,CAACI,GAAG,CAAC,aAAa;EACvC,CAAC;EAErB,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;IACzDC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAC,cAAc,EAAE;IAAkB,CAAC;IAC7CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,SAAS;EAClC,CAAC,CAAC;EAEF,IAAG,CAACM,QAAQ,CAACO,EAAE,EAAC;IACZ,MAAM3B,IAAI,CAAC;MAAC4B,OAAO,EAAE;IAAuB,CAAC,EAAE;MAACC,MAAM,EAAE;IAAG,CAAC,CAAC;EACjE;AACJ;;AAEA;AAAA,IAAArB,EAAA;AAAAsB,YAAA,CAAAtB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/a/Desktop/React Projects/routers/routers-project/frontend/src/pages/EventDetail.js\",\n  _s = $RefreshSig$();\nimport { json, useRouteLoaderData } from 'react-router-dom';\nimport EventItem from '../components/EventItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventDetailPage() {\n  _s();\n  const data = useRouteLoaderData(\"event-detail\");\n  return /*#__PURE__*/_jsxDEV(EventItem, {\n    event: data.event\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n}\n_s(EventDetailPage, \"4DBW6nwrvXRMSwRBgIay5Sszcp8=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nexport async function loader({\n  request,\n  params\n}) {\n  const id = params.eventId;\n  const response = await fetch('http://localhost:8080/events/' + id);\n  if (!response.ok) {\n    throw json({\n      message: 'Could not fetch details for selected event.'\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nexport async function action({\n  params\n}) {\n  const eventId = params.eventId;\n  const response = await fetch('http://localhost:8080/events/');\n  if (!response.ok) {\n    throw json({\n      message: 'Could not fech details for selected event.'\n    }, {\n      status: 500\n    });\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["json","useRouteLoaderData","EventItem","jsxDEV","_jsxDEV","EventDetailPage","_s","data","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","request","params","id","eventId","response","fetch","ok","message","status","action","$RefreshReg$"],"sources":["/Users/a/Desktop/React Projects/routers/routers-project/frontend/src/pages/EventDetail.js"],"sourcesContent":["import {json, useRouteLoaderData} from 'react-router-dom';\n\nimport EventItem from '../components/EventItem';\n\nfunction EventDetailPage() {\n    const data = useRouteLoaderData(\"event-detail\");\n\n    return (\n        <EventItem event={data.event} />\n    );\n}\n\nexport default EventDetailPage;\n\nexport async function loader({request, params}) {\n    const id = params.eventId;\n\n    const response = await fetch('http://localhost:8080/events/' + id);\n\n    if (!response.ok) {\n        throw json({message: 'Could not fetch details for selected event.'}, {\n            status: 500\n        })\n    } else {\n        return response;\n    }\n}\n\nexport async function action({params}) {\n    const eventId = params.eventId;\n    const response  = await fetch('http://localhost:8080/events/');\n    if(!response.ok){\n        throw json(\n            {message: 'Could not fech details for selected event.'},\n            {\n                status: 500\n            }\n        )\n    }\n}"],"mappings":";;AAAA,SAAQA,IAAI,EAAEC,kBAAkB,QAAO,kBAAkB;AAEzD,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAMC,IAAI,GAAGN,kBAAkB,CAAC,cAAc,CAAC;EAE/C,oBACIG,OAAA,CAACF,SAAS;IAACM,KAAK,EAAED,IAAI,CAACC;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAExC;AAACN,EAAA,CANQD,eAAe;EAAA,QACPJ,kBAAkB;AAAA;AAAAY,EAAA,GAD1BR,eAAe;AAQxB,eAAeA,eAAe;AAE9B,OAAO,eAAeS,MAAMA,CAAC;EAACC,OAAO;EAAEC;AAAM,CAAC,EAAE;EAC5C,MAAMC,EAAE,GAAGD,MAAM,CAACE,OAAO;EAEzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGH,EAAE,CAAC;EAElE,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IACd,MAAMrB,IAAI,CAAC;MAACsB,OAAO,EAAE;IAA6C,CAAC,EAAE;MACjEC,MAAM,EAAE;IACZ,CAAC,CAAC;EACN,CAAC,MAAM;IACH,OAAOJ,QAAQ;EACnB;AACJ;AAEA,OAAO,eAAeK,MAAMA,CAAC;EAACR;AAAM,CAAC,EAAE;EACnC,MAAME,OAAO,GAAGF,MAAM,CAACE,OAAO;EAC9B,MAAMC,QAAQ,GAAI,MAAMC,KAAK,CAAC,+BAA+B,CAAC;EAC9D,IAAG,CAACD,QAAQ,CAACE,EAAE,EAAC;IACZ,MAAMrB,IAAI,CACN;MAACsB,OAAO,EAAE;IAA4C,CAAC,EACvD;MACIC,MAAM,EAAE;IACZ,CACJ,CAAC;EACL;AACJ;AAAC,IAAAV,EAAA;AAAAY,YAAA,CAAAZ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
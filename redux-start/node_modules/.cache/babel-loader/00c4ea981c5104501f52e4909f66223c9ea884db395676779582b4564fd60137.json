{"ast":null,"code":"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true\n};\n\n//createSlice() automatically creates unique identifiers for different reducers.\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\nconst initialAuthState = {\n  isAuthenticated: false\n};\nconst authSlice = createSlice({\n  name: 'authentication',\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n      state.isAuthenticated = true;\n    },\n    logout(state) {\n      state.isAuthenticated = false;\n    }\n  }\n});\nconst counterStore = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n  //reducer: counterSlice.reducer\n  // ----- when we have multiple reducers.\n  //reducer: {counter: counterSlice.reducer}\n});\n\nexport const counterActions = counterSlice.actions;\nexport default counterStore;","map":{"version":3,"names":["createSlice","configureStore","initialCounterState","counter","showCounter","counterSlice","name","initialState","reducers","increment","state","decrement","increase","action","payload","toggleCounter","initialAuthState","isAuthenticated","authSlice","login","logout","counterStore","reducer","auth","counterActions","actions"],"sources":["/Users/a/Desktop/React Projects/redux-start/src/store/redux.js"],"sourcesContent":["import {createSlice, configureStore} from \"@reduxjs/toolkit\";\n\nconst initialCounterState = {counter: 0, showCounter: true}\n\n//createSlice() automatically creates unique identifiers for different reducers.\nconst counterSlice = createSlice(\n    {\n        name: 'counter',\n        initialState: initialCounterState,\n        reducers: {\n            increment(state) {\n                state.counter++;\n            },\n            decrement(state) {\n                state.counter--;\n            },\n            increase(state, action) {\n                state.counter = state.counter + action.payload;\n            },\n            toggleCounter(state) {\n                state.showCounter = !state.showCounter;\n            },\n        }\n    }\n);\n\n\nconst initialAuthState = {\n    isAuthenticated: false,\n}\n\nconst authSlice = createSlice({\n    name: 'authentication',\n    initialState: initialAuthState,\n    reducers: {\n        login(state) {\n            state.isAuthenticated = true;\n        },\n        logout(state) {\n            state.isAuthenticated = false;\n        },\n    }\n});\n\n\nconst counterStore = configureStore({\n    reducer: {counter: counterSlice.reducer, auth: authSlice.reducer}\n    //reducer: counterSlice.reducer\n    // ----- when we have multiple reducers.\n    //reducer: {counter: counterSlice.reducer}\n});\n\nexport const counterActions = counterSlice.actions;\nexport default counterStore;"],"mappings":"AAAA,SAAQA,WAAW,EAAEC,cAAc,QAAO,kBAAkB;AAE5D,MAAMC,mBAAmB,GAAG;EAACC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAI,CAAC;;AAE3D;AACA,MAAMC,YAAY,GAAGL,WAAW,CAC5B;EACIM,IAAI,EAAE,SAAS;EACfC,YAAY,EAAEL,mBAAmB;EACjCM,QAAQ,EAAE;IACNC,SAASA,CAACC,KAAK,EAAE;MACbA,KAAK,CAACP,OAAO,EAAE;IACnB,CAAC;IACDQ,SAASA,CAACD,KAAK,EAAE;MACbA,KAAK,CAACP,OAAO,EAAE;IACnB,CAAC;IACDS,QAAQA,CAACF,KAAK,EAAEG,MAAM,EAAE;MACpBH,KAAK,CAACP,OAAO,GAAGO,KAAK,CAACP,OAAO,GAAGU,MAAM,CAACC,OAAO;IAClD,CAAC;IACDC,aAAaA,CAACL,KAAK,EAAE;MACjBA,KAAK,CAACN,WAAW,GAAG,CAACM,KAAK,CAACN,WAAW;IAC1C;EACJ;AACJ,CACJ,CAAC;AAGD,MAAMY,gBAAgB,GAAG;EACrBC,eAAe,EAAE;AACrB,CAAC;AAED,MAAMC,SAAS,GAAGlB,WAAW,CAAC;EAC1BM,IAAI,EAAE,gBAAgB;EACtBC,YAAY,EAAES,gBAAgB;EAC9BR,QAAQ,EAAE;IACNW,KAAKA,CAACT,KAAK,EAAE;MACTA,KAAK,CAACO,eAAe,GAAG,IAAI;IAChC,CAAC;IACDG,MAAMA,CAACV,KAAK,EAAE;MACVA,KAAK,CAACO,eAAe,GAAG,KAAK;IACjC;EACJ;AACJ,CAAC,CAAC;AAGF,MAAMI,YAAY,GAAGpB,cAAc,CAAC;EAChCqB,OAAO,EAAE;IAACnB,OAAO,EAAEE,YAAY,CAACiB,OAAO;IAAEC,IAAI,EAAEL,SAAS,CAACI;EAAO;EAChE;EACA;EACA;AACJ,CAAC,CAAC;;AAEF,OAAO,MAAME,cAAc,GAAGnB,YAAY,CAACoB,OAAO;AAClD,eAAeJ,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}
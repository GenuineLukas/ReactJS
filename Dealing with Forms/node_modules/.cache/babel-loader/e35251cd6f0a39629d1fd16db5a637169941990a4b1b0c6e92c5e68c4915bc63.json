{"ast":null,"code":"var _jsxFileName = \"/Users/a/Desktop/React Projects/dealing-with-forms/react-complete-guide-code/code/01-starting-project/src/components/SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  const enteredNameIsValid = enteredName.trim() !== '';\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n  let formIsValid = false;\n  formIsValid = enteredNameIsValid;\n  const nameInputChangedHandler = event => {\n    setEnteredName(event.target.value);\n  };\n  const emailInputChangedHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n  const inputBlurHandler = event => {\n    setEnteredNameTouched(true);\n    setEnteredEmailTouched(true);\n  };\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n    if (!enteredNameIsValid) {\n      return;\n    }\n    setEnteredName('');\n    setEnteredNameTouched(false);\n    // nameInputRef.current.value = '';\n    // -> NOT IDEAL, DON'T MANIPULATE THE DOM DIRECTLY.\n  };\n\n  const inputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: inputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangedHandler,\n        onBlur: inputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: inputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"email\",\n        onChange: emailInputChangedHandler,\n        onBlur: inputBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Email must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"xbeuRHbUOIU2iL6nDkeVWcFbgvo=\");\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","SimpleInput","props","_s","enteredName","setEnteredName","enteredEmail","setEnteredEmail","enteredNameTouched","setEnteredNameTouched","enteredEmailTouched","setEnteredEmailTouched","enteredNameIsValid","trim","nameInputIsInvalid","formIsValid","nameInputChangedHandler","event","target","value","emailInputChangedHandler","inputBlurHandler","formSubmissionHandler","preventDefault","inputClasses","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","onBlur","disabled","_c","$RefreshReg$"],"sources":["/Users/a/Desktop/React Projects/dealing-with-forms/react-complete-guide-code/code/01-starting-project/src/components/SimpleInput.js"],"sourcesContent":["import {useState} from 'react';\nconst SimpleInput = (props) => {\n    const [enteredName, setEnteredName] = useState('');\n    const [enteredEmail, setEnteredEmail] = useState('');\n    const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n    const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n\n\n    const enteredNameIsValid = enteredName.trim() !== '';\n    const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n\n    let formIsValid = false;\n    formIsValid = enteredNameIsValid;\n\n\n    const nameInputChangedHandler = event => {\n        setEnteredName(event.target.value);\n    }\n    const emailInputChangedHandler = event => {\n        setEnteredEmail(event.target.value);\n    }\n\n    const inputBlurHandler = event => {\n        setEnteredNameTouched(true);\n        setEnteredEmailTouched(true);\n    }\n\n    const formSubmissionHandler = event => {\n        event.preventDefault();\n\n        setEnteredNameTouched(true);\n\n        if(!enteredNameIsValid) {\n            return;\n        }\n\n        setEnteredName('');\n        setEnteredNameTouched(false);\n        // nameInputRef.current.value = '';\n        // -> NOT IDEAL, DON'T MANIPULATE THE DOM DIRECTLY.\n    }\n\n\n    const inputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control'\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={inputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input type='text' id='name' onChange={nameInputChangedHandler} onBlur={inputBlurHandler} value={enteredName}/>\n          {nameInputIsInvalid && <p className=\"error-text\">\n              Name must not be empty.\n          </p>}\n      </div>\n        <div className={inputClasses}>\n            <label htmlFor='email'>Your Email</label>\n            <input type='text' id='email' onChange={emailInputChangedHandler} onBlur={inputBlurHandler} value={enteredEmail}/>\n            {nameInputIsInvalid && <p className=\"error-text\">\n                Email must not be empty.\n            </p>}\n        </div>\n        <div className=\"form-actions\">\n            <button disabled={!formIsValid}>Submit</button>\n        </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
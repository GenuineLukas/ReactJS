{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { isValidElement, useState } from \"react\";\nconst useInputs = (validateValue, inputKind) => {\n  _s();\n  const [enteredValue, setEnteredValue] = useState('');\n  const [isTouched, setIsTouched] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const valueIsValid = validateValue(enteredValue);\n  const hasError = !valueIsValid && isTouched;\n  const valueChangeHandler = event => {\n    setEnteredValue(event.target.value);\n  };\n  const inputBlurHandler = event => {\n    setIsTouched(true);\n    if (inputKind === \"email\") {\n      if (event.target.value.length === 0) {\n        setErrorMessage(\"Email must not be empty.\");\n      } else {\n        setErrorMessage(\"type your email in a correct form. (including @)\");\n      }\n    }\n  };\n  const reset = () => {\n    setEnteredValue('');\n    setIsTouched(false);\n  };\n  return {\n    value: enteredValue,\n    isValid: valueIsValid,\n    hasError,\n    errorMessage,\n    valueChangeHandler,\n    inputBlurHandler,\n    reset\n  };\n};\n_s(useInputs, \"BS1cF/rtKf8TnFmFsZ/MT0bU86U=\");\nexport default useInputs;","map":{"version":3,"names":["React","isValidElement","useState","useInputs","validateValue","inputKind","_s","enteredValue","setEnteredValue","isTouched","setIsTouched","errorMessage","setErrorMessage","valueIsValid","hasError","valueChangeHandler","event","target","value","inputBlurHandler","length","reset","isValid"],"sources":["/Users/a/Desktop/React Projects/dealing-with-forms/react-complete-guide-code/code/01-starting-project/src/hooks/use-inputs.js"],"sourcesContent":["import React, {isValidElement, useState} from \"react\";\n\nconst useInputs = (validateValue, inputKind) => {\n    const [enteredValue, setEnteredValue] = useState('');\n    const [isTouched, setIsTouched] = useState(false);\n    const [errorMessage, setErrorMessage] = useState(\"\");\n\n    const valueIsValid = validateValue(enteredValue);\n    const hasError = !valueIsValid && isTouched;\n\n    const valueChangeHandler = (event) => {\n        setEnteredValue(event.target.value);\n    };\n\n    const inputBlurHandler = (event) => {\n        setIsTouched(true);\n\n        if(inputKind === \"email\"){\n            if(event.target.value.length === 0){\n                setErrorMessage(\"Email must not be empty.\")\n            } else {\n                setErrorMessage(\"type your email in a correct form. (including @)\")\n            }\n        }\n    };\n\n    const reset = () => {\n        setEnteredValue('');\n        setIsTouched(false);\n    };\n\n    return {\n        value: enteredValue,\n        isValid: valueIsValid,\n        hasError,\n        errorMessage,\n        valueChangeHandler,\n        inputBlurHandler,\n        reset,\n}\n}\n\nexport default useInputs;"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,cAAc,EAAEC,QAAQ,QAAO,OAAO;AAErD,MAAMC,SAAS,GAAGA,CAACC,aAAa,EAAEC,SAAS,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMW,YAAY,GAAGT,aAAa,CAACG,YAAY,CAAC;EAChD,MAAMO,QAAQ,GAAG,CAACD,YAAY,IAAIJ,SAAS;EAE3C,MAAMM,kBAAkB,GAAIC,KAAK,IAAK;IAClCR,eAAe,CAACQ,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACvC,CAAC;EAED,MAAMC,gBAAgB,GAAIH,KAAK,IAAK;IAChCN,YAAY,CAAC,IAAI,CAAC;IAElB,IAAGL,SAAS,KAAK,OAAO,EAAC;MACrB,IAAGW,KAAK,CAACC,MAAM,CAACC,KAAK,CAACE,MAAM,KAAK,CAAC,EAAC;QAC/BR,eAAe,CAAC,0BAA0B,CAAC;MAC/C,CAAC,MAAM;QACHA,eAAe,CAAC,kDAAkD,CAAC;MACvE;IACJ;EACJ,CAAC;EAED,MAAMS,KAAK,GAAGA,CAAA,KAAM;IAChBb,eAAe,CAAC,EAAE,CAAC;IACnBE,YAAY,CAAC,KAAK,CAAC;EACvB,CAAC;EAED,OAAO;IACHQ,KAAK,EAAEX,YAAY;IACnBe,OAAO,EAAET,YAAY;IACrBC,QAAQ;IACRH,YAAY;IACZI,kBAAkB;IAClBI,gBAAgB;IAChBE;EACR,CAAC;AACD,CAAC;AAAAf,EAAA,CAtCKH,SAAS;AAwCf,eAAeA,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}
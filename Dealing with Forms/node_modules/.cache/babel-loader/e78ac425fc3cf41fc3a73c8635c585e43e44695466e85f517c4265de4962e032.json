{"ast":null,"code":"var _jsxFileName = \"/Users/a/Desktop/React Projects/dealing-with-forms/react-complete-guide-code/code/01-starting-project/src/components/SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport useInputs from \"../hooks/use-inputs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangedHandler,\n    inputBlurHandler: nameBlurHandler,\n    reset: resetNameInput\n  } = useInputs(value => value.trim() !== '');\n  const VALID_REGEXP = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: emailInputHasError,\n    valueChangeHandler: emailChangedHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmailInput\n  } = useInputs(value => value.match(VALID_REGEXP));\n  const [emailErrorMessage, setEmailErrorMessage] = useState(\"\");\n  let formIsValid = false;\n  formIsValid = enteredNameIsValid && enteredEmailIsValid;\n  const emailInputBlurHandler = event => {\n    if (event.target.value.length === 0) {\n      setEmailErrorMessage(\"Email must not be empty.\");\n    } else {\n      setEmailErrorMessage(\"type your email in a correct form. (including @)\");\n    }\n  };\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEnteredEmailTouched(true);\n    if (!enteredNameIsValid || !enteredEmailIsValid) {\n      return;\n    }\n    resetNameInput();\n    resetEmailInput();\n    // nameInputRef.current.value = '';\n    // -> NOT IDEAL, DON'T MANIPULATE THE DOM DIRECTLY.\n  };\n\n  const nameInputClasses = nameInputHasError ? 'form-control invalid' : 'form-control';\n  const emailInputClasses = emailInputHasError ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameChangedHandler,\n        onBlur: nameBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), nameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"email\",\n        onChange: emailChangedHandler,\n        onBlur: emailBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), emailInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: emailErrorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"VM+thozA3vSrsxa+aKQlE0mk/EI=\", false, function () {\n  return [useInputs, useInputs];\n});\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","useInputs","jsxDEV","_jsxDEV","SimpleInput","props","_s","value","enteredName","isValid","enteredNameIsValid","hasError","nameInputHasError","valueChangeHandler","nameChangedHandler","inputBlurHandler","nameBlurHandler","reset","resetNameInput","trim","VALID_REGEXP","enteredEmail","enteredEmailIsValid","emailInputHasError","emailChangedHandler","emailBlurHandler","resetEmailInput","match","emailErrorMessage","setEmailErrorMessage","formIsValid","emailInputBlurHandler","event","target","length","formSubmissionHandler","preventDefault","setEnteredEmailTouched","nameInputClasses","emailInputClasses","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","onBlur","disabled","_c","$RefreshReg$"],"sources":["/Users/a/Desktop/React Projects/dealing-with-forms/react-complete-guide-code/code/01-starting-project/src/components/SimpleInput.js"],"sourcesContent":["import {useState} from 'react';\nimport useInputs from \"../hooks/use-inputs\";\nconst SimpleInput = (props) => {\n    const {\n        value: enteredName,\n        isValid: enteredNameIsValid,\n        hasError: nameInputHasError,\n        valueChangeHandler: nameChangedHandler,\n        inputBlurHandler: nameBlurHandler,\n        reset: resetNameInput\n    } = useInputs(value => value.trim() !== '');\n\n    const VALID_REGEXP = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n    const {\n        value: enteredEmail,\n        isValid: enteredEmailIsValid,\n        hasError: emailInputHasError,\n        valueChangeHandler: emailChangedHandler,\n        inputBlurHandler: emailBlurHandler,\n        reset: resetEmailInput\n    } = useInputs(value => value.match(VALID_REGEXP));\n\n    const [emailErrorMessage, setEmailErrorMessage] = useState(\"\");\n\n\n    let formIsValid = false;\n    formIsValid = enteredNameIsValid && enteredEmailIsValid;\n\n    const emailInputBlurHandler = event => {\n        if(event.target.value.length === 0){\n            setEmailErrorMessage(\"Email must not be empty.\")\n        } else {\n            setEmailErrorMessage(\"type your email in a correct form. (including @)\")\n        }\n    }\n\n    const formSubmissionHandler = event => {\n        event.preventDefault();\n\n        setEnteredEmailTouched(true);\n\n        if(!enteredNameIsValid || !enteredEmailIsValid) {\n            return;\n        }\n\n        resetNameInput();\n        resetEmailInput();\n        // nameInputRef.current.value = '';\n        // -> NOT IDEAL, DON'T MANIPULATE THE DOM DIRECTLY.\n    }\n\n\n    const nameInputClasses = nameInputHasError ? 'form-control invalid' : 'form-control'\n    const emailInputClasses = emailInputHasError ? 'form-control invalid' : 'form-control'\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input type='text' id='name' onChange={nameChangedHandler} onBlur={nameBlurHandler} value={enteredName}/>\n          {nameInputHasError && <p className=\"error-text\">\n              Name must not be empty.\n          </p>}\n      </div>\n        <div className={emailInputClasses}>\n            <label htmlFor='email'>Your Email</label>\n            <input type='text' id='email' onChange={emailChangedHandler} onBlur={emailBlurHandler} value={enteredEmail}/>\n            {emailInputHasError && <p className=\"error-text\">\n                {emailErrorMessage}\n            </p>}\n        </div>\n        <div className=\"form-actions\">\n            <button disabled={!formIsValid}>Submit</button>\n        </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
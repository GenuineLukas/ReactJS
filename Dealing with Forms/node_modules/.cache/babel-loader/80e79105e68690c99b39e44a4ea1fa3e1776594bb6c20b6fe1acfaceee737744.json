{"ast":null,"code":"var _jsxFileName = \"/Users/a/Desktop/React Projects/dealing-with-forms/react-complete-guide-code/code/01-starting-project/src/components/SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  const [emailErrorMessage, setEmailErrorMessage] = useState(\"\");\n  const enteredNameIsValid = enteredName.trim() !== '';\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n  const VALID_REGEXP = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n  const enteredEmailIsValid = enteredEmail.trim().match(VALID_REGEXP);\n  const emailInputIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\n  let formIsValid = false;\n  formIsValid = enteredNameIsValid && enteredEmailIsValid;\n  const nameInputChangedHandler = event => {\n    setEnteredName(event.target.value);\n  };\n  const emailInputChangedHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n  };\n  const emailInputBlurHandler = event => {\n    setEnteredEmailTouched(true);\n    if (event.target.value.length === 0) {\n      setEmailErrorMessage(\"Email must not be empty.\");\n    } else {\n      setEmailErrorMessage(\"type your email in a correct form. (including @)\");\n    }\n  };\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n    setEnteredEmailTouched(true);\n    if (!enteredNameIsValid || !enteredEmailIsValid) {\n      return;\n    }\n    setEnteredName('');\n    setEnteredEmail('');\n    setEnteredNameTouched(false);\n    setEnteredEmailTouched(false);\n    // nameInputRef.current.value = '';\n    // -> NOT IDEAL, DON'T MANIPULATE THE DOM DIRECTLY.\n  };\n\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n  const emailInputClasses = emailInputIsInvalid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangedHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"email\",\n        onChange: emailInputChangedHandler,\n        onBlur: emailInputBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), emailInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: emailErrorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"2HZNUf+NIJW8DZe3BY3KD6NPjNA=\");\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","SimpleInput","props","_s","enteredName","setEnteredName","enteredEmail","setEnteredEmail","enteredNameTouched","setEnteredNameTouched","enteredEmailTouched","setEnteredEmailTouched","emailErrorMessage","setEmailErrorMessage","enteredNameIsValid","trim","nameInputIsInvalid","VALID_REGEXP","enteredEmailIsValid","match","emailInputIsInvalid","formIsValid","nameInputChangedHandler","event","target","value","emailInputChangedHandler","nameInputBlurHandler","emailInputBlurHandler","length","formSubmissionHandler","preventDefault","nameInputClasses","emailInputClasses","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","onBlur","disabled","_c","$RefreshReg$"],"sources":["/Users/a/Desktop/React Projects/dealing-with-forms/react-complete-guide-code/code/01-starting-project/src/components/SimpleInput.js"],"sourcesContent":["import {useState} from 'react';\nconst SimpleInput = (props) => {\n    const [enteredName, setEnteredName] = useState('');\n    const [enteredEmail, setEnteredEmail] = useState('');\n    const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n    const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n    const [emailErrorMessage, setEmailErrorMessage] = useState(\"\");\n\n\n    const enteredNameIsValid = enteredName.trim() !== '';\n    const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n    const VALID_REGEXP = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n    const enteredEmailIsValid = enteredEmail.trim().match(VALID_REGEXP);\n    const emailInputIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\n\n    let formIsValid = false;\n    formIsValid = enteredNameIsValid && enteredEmailIsValid;\n\n\n    const nameInputChangedHandler = event => {\n        setEnteredName(event.target.value);\n    }\n    const emailInputChangedHandler = event => {\n        setEnteredEmail(event.target.value);\n    }\n\n    const nameInputBlurHandler = event => {\n        setEnteredNameTouched(true);\n    }\n\n    const emailInputBlurHandler = event => {\n        setEnteredEmailTouched(true);\n        if(event.target.value.length === 0){\n            setEmailErrorMessage(\"Email must not be empty.\")\n        } else {\n            setEmailErrorMessage(\"type your email in a correct form. (including @)\")\n        }\n    }\n\n    const formSubmissionHandler = event => {\n        event.preventDefault();\n\n        setEnteredNameTouched(true);\n        setEnteredEmailTouched(true);\n\n        if(!enteredNameIsValid || !enteredEmailIsValid) {\n            return;\n        }\n\n        setEnteredName('');\n        setEnteredEmail('');\n        setEnteredNameTouched(false);\n        setEnteredEmailTouched(false);\n        // nameInputRef.current.value = '';\n        // -> NOT IDEAL, DON'T MANIPULATE THE DOM DIRECTLY.\n    }\n\n\n    const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control'\n    const emailInputClasses = emailInputIsInvalid ? 'form-control invalid' : 'form-control'\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input type='text' id='name' onChange={nameInputChangedHandler} onBlur={nameInputBlurHandler} value={enteredName}/>\n          {nameInputIsInvalid && <p className=\"error-text\">\n              Name must not be empty.\n          </p>}\n      </div>\n        <div className={emailInputClasses}>\n            <label htmlFor='email'>Your Email</label>\n            <input type='text' id='email' onChange={emailInputChangedHandler} onBlur={emailInputBlurHandler} value={enteredEmail}/>\n            {emailInputIsInvalid && <p className=\"error-text\">\n                {emailErrorMessage}\n            </p>}\n        </div>\n        <div className=\"form-actions\">\n            <button disabled={!formIsValid}>Submit</button>\n        </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}